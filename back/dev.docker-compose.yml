version: "3"

services:
  db-pg:
    platform: linux/x86_64
    image: postgres
    restart: always
    container_name: postgres_whatsapp_bot
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - db_pg_network
  redis-stack:
    image: redis/redis-stack:latest
    restart: always
    environment:
      REDIS_PASSWORD: "123456"
    ports:
      - "6379:6379"
    volumes:
      - redis:/var/lib/redis
    networks:
      - proxy_manager
  backend:
    build:
      dockerfile: test.Dockerfile
    container_name: bot_backend
    restart: always
    environment:
      DB_HOST: db-pg
      REDIS_URI: redis://redis-stack:6379
      TZ: America/Sao_Paulo
    depends_on:
      - db-pg
      - redis-stack
    ports:
      - "${PORT}:8080"
      - "9229:9229"
    volumes:
      - .:/usr/src/app
    networks:
      - db_pg_network
      - proxy_manager
  frontend:
    build:
      context: ../front/.
      dockerfile: ../front/Dockerfile
    container_name: bot_frontend
    restart: always
    depends_on:
      - backend
    # environment:
    #   TZ: America/Sao_Paulo
    ports:
      - "3333:3000"
    volumes:
      - ../front/.:/usr/src/app
    networks:
      - proxy_manager
    stdin_open: true
    tty: true
  nginx:
    image: nginx:latest
    container_name: nginx-proxy_manager
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy_manager
    depends_on:
      - backend

volumes:
  pgdata:
    name: pgdata
  backend:
    name: backend
  redis:
    name: redis
  nginx:
    name: nginx

networks:
  db_pg_network:
    name: db_pg_network
  proxy_manager:
    name: proxy_manager
